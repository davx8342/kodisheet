#!/bin/bash

#
# description: makes contact sheets for your tv shows and movies using
#              your kodi sqlite files as source material.
#
# author:      davx8342@gmail.com
# version:     0.5 ALPHA
#
VERSION="0.5 ALPHA"

#
# path to your kodi db files
#
dbpath="./db"

#
# output path to your html
#
htmlout="/var/www/html/kodisheet"

#
# how many days back the recently added goes
#
lastDays="7"

#
# how many thumbnails we show per page
#
perPage="80"

#
# what we process, your options are tvshow or movie or both
#
mediatypes="movie tvshow"

if [ ! -d "$dbpath" ]; then
   echo You haven\'t created your db directory, you need to create this
   echo and put your kodi database files in there for this script to work.
   exit
fi

if [ ! -d "$htmlout" ]; then
   echo Your html output directory does not exist.
   exit
fi

#
# we save our images in a particular structure, create the structure if any
# of these directories don't already exist.
#
checkdirs="$htmlout/images $htmlout/images/tvshowposters $htmlout/images/movieposters $htmlout/images/tvshowfanart $htmlout/images/moviefanart $htmlout/images/tvshowbanners $htmlout/tvshow $htmlout/movie $htmlout/genre"

#
# delete these files if they exist already, just saves repeating code later
#
deletefiles="$htmlout/index.html $htmlout/recent.html $htmlout/genre/index.html"
for file in $deletefiles; do
   if [ -f "$file" ]; then
      rm "$file"
      touch "$file"
   fi
done

#
# footer
#
footer="Generated by <a href=\"https://github.com/davx8342/kodisheet\">kodisheet</a> $VERSION"

#
# some basic metrics
#
movieCount=`sqlite3 $dbpath/MyVideos107.db "SELECT count() from movie"`
tvCount=`sqlite3 $dbpath/MyVideos107.db "SELECT count() from tvshow"`
let moviePages=($movieCount+$perPage-1)/$perPage
let tvPages=($tvCount+$perPage-1)/$perPage

#
# remove the genre index
#
if [ -f "$htmlout/genre/index.html" ]; then
   rm "$htmlout/genre/index.html"
fi

for dir in $checkdirs; do
   if [ ! -d "$dir" ]; then
      echo "INFO: $dir doesn't exist, will try and create it"
      mkdir -p $dir
   fi
done

#
# if we have files without poster art we need to substitute something or we get broken images
#
convert -size 150x221 xc:black $htmlout/images/tvshowbanners/unknown.jpg
convert -size 150x221 xc:black $htmlout/images/tvshowposters/unknown.jpg
convert -size 150x221 xc:black $htmlout/images/movieposters/unknown.jpg



for mediatype in $mediatypes; do

   if [ "$mediatype" == "tvshow" ]; then
      id="idShow"
      table="$mediatype"
      indextitle="TV Shows"
      pages=$tvPages
   fi

   if [ "$mediatype" == "movie" ]; then
      id="idMovie"
      table="$mediatype"
      indextitle="Movies"
      pages=$moviePages
   fi

   idList=`sqlite3 $dbpath/MyVideos107.db "SELECT $id from $table ORDER BY c00"`

   if [ -f "$htmlout/$mediatype.html" ]; then
      rm "$htmlout/$mediatype.html"
   fi
   touch "$htmlout/$mediatype.html"

   pageCounter="0"
   page="1"

   for idLoop in $idList; do


      if [ "$pageCounter" == "0" ]; then
         pageOut="$htmlout/$mediatype/index.$page.html"
         if [ -f "$pageOut" ]; then
            rm "$pageOut"
            touch "$pageOut"
         fi
#         echo "--- start of page $page $pageOut"
         echo "<html><head><title>Kodisheet $indextitle Page $page</title>" >> $pageOut
         echo "<link rel=\"stylesheet\" href=\"../kodisheet.css\" type=\"text/css\">" >> $pageOut
         echo "</head><body>" >> $pageOut
         echo "<p class=\"navigaton\">" >> $pageOut
         echo "<br /><br />" >> $pageOut
         echo "<font class=\"giantheading\">" >> $pageOut
         echo "<a href=\"../index.html\">Home</a>" >> $pageOut
         echo " | " >> $pageOut
         if [ "$mediatype" == "tvshow" ]; then
            echo "TV Shows [$tvCount]" >> $pageOut
         else
            echo "<a href=\"../tvshow/index.1.html\">TV Shows</a> [$tvCount]" >> $pageOut
         fi
         echo " | " >> $pageOut
         if [ "$mediatype" == "movie" ]; then
            echo "Movies [$movieCount]" >> $pageOut
         else
            echo "<a href=\"../movie/index.1.html\">Movies</a> [$movieCount]" >> $pageOut
         fi
         echo " | " >> $pageOut
         echo "<a href=\"../genre/index.html\">Genres</a>" >> $pageOut
         echo " | " >> $pageOut
         echo "<a href=\"../recent.html\">Last $lastDays days</a>" >> $pageOut
         echo "<br /><br /></font>" >> $pageOut


         counter="1"
         loopPages=$((pages+1))
         pagenav="<font class=\"pagenav\"> Page $page of $pages [ "
         while [ "$counter" != "$loopPages" ]; do
            if [ "$page" == "$counter" ]; then
               pagenav="$pagenav <font class=\"boldpagenav\">$counter</font>"
            else
               pagenav="$pagenav <a href=\"index.$counter.html\">$counter</a>"
            fi
            counter=$((counter+1))
         done
         pagenav="$pagenav ]</font>"
         echo "$pagenav<br /><br />" >> $pageOut




         if [ "$mediatype" == "tvshow" ]; then
            convert -size 130x25 xc:blue $htmlout/blue.jpg
            convert -size 120x25 xc:orange $htmlout/orange.jpg
            convert -font Arial -pointsize 18 -fill white -background blue -gravity center -size 130x25 caption:"no. of episodes" $htmlout/blue.jpg +swap -gravity west -composite $htmlout/episodes.jpg
            convert -fill white -font Arial -pointsize 18 -background orange -gravity center -size 120x25 caption:"no. of seasons" $htmlout/orange.jpg +swap -gravity west -composite $htmlout/seasons.jpg
            echo "<img src=\"../episodes.jpg\"> <img src=\"../seasons.jpg\">" >> $pageOut
            if [ -f "$htmlout/blue.jpg" ]; then
               rm "$htmlout/blue.jpg"
            fi
            if [ -f "$htmlout/orange.jpg" ]; then
               rm "$htmlout/orange.jpg"
            fi

         fi
         echo "</p>" >> $pageOut
      fi

      name=`sqlite3 $dbpath/MyVideos107.db "SELECT c00 from $mediatype where $id=$idLoop"`

      if [ "$name" != "** 403: Series Not Permitted **" ]; then
         plot=`sqlite3 $dbpath/MyVideos107.db "SELECT c01 from $mediatype where $id=$idLoop"`

         if [ "$mediatype" == "tvshow" ]; then
            status=`sqlite3 $dbpath/MyVideos107.db "SELECT c02 from $mediatype where $id=$idLoop"`
            rating=`sqlite3 $dbpath/MyVideos107.db "SELECT c04 from $mediatype where $id=$idLoop"`
            firstaired=`sqlite3 $dbpath/MyVideos107.db "SELECT c05 from $mediatype where $id=$idLoop"`
            guide=`sqlite3 $dbpath/MyVideos107.db "SELECT c10 from $mediatype where $id=$idLoop"`
            contentrating=`sqlite3 $dbpath/MyVideos107.db "SELECT c13 from $mediatype where $id=$idLoop"`
            network=`sqlite3 $dbpath/MyVideos107.db "SELECT c14 from $mediatype where $id=$idLoop"`
            echo $name
         fi

         if [ "$mediatype" == "movie" ]; then
            idFile=`sqlite3 $dbpath/MyVideos107.db "SELECT idFile from $mediatype where $id=$idLoop"`
            width=`sqlite3 $dbpath/MyVideos107.db "SELECT iVideoWidth from streamdetails where idFile=\"$idFile\" and iStreamType=0"`
            height=`sqlite3 $dbpath/MyVideos107.db "SELECT iVideoHeight from streamdetails where idFile=\"$idFile\" and iStreamType=0"`
            if [ "$width" == "1920" ]; then
               width="1080p"
            elif [ "$width" == "1280" ]; then
               width="720p"
            elif [ "$width" == "640" ]; then
               width="480p"
            elif [ "$width" == "" ]; then
               width=""
            else
               width="${width}x${height}"
            fi
            filetype=`sqlite3 $dbpath/MyVideos107.db "SELECT strFilename from files where idFile=\"$idFile\""`
            filetype="${filetype: -3}"
            trailerurl=`sqlite3 $dbpath/MyVideos107.db "SELECT c19 from $mediatype where $id=$idLoop"`
            if [ "$trailerurl" != "" ]; then
               videoarg=`echo $trailerurl|awk -F"videoid=" '{print $2}'|cut -c1-11`
               trailerurl="https://www.youtube.com/watch?v=${videoarg}"
            fi
         
            studio=`sqlite3 $dbpath/MyVideos107.db "SELECT c18 from $mediatype where $id=$idLoop"`
            rating=`sqlite3 $dbpath/MyVideos107.db "SELECT c12 from $mediatype where $id=$idLoop"`
            runtime=`sqlite3 $dbpath/MyVideos107.db "SELECT c11 from $mediatype where $id=$idLoop"`
            runtime=`echo - | awk -v "S=$runtime" '{printf "%dh%dm%ds",S/(60*60),S%(60*60)/60,S%60}'`
            director=`sqlite3 $dbpath/MyVideos107.db "SELECT c15 from $mediatype where $id=$idLoop"`
            echo $name 
         fi

         out="$htmlout/$mediatype/$idLoop.html"
         if [ -f "$out" ]; then
            rm "$out"
         fi
         touch "$out"

         if [ "$mediatype" == "tvshow" ]; then
            bannerurl=`sqlite3 $dbpath/MyVideos107.db "SELECT url from art where media_id=$idLoop and type='banner' and media_type=\"$mediatype\""`
            if [ "$bannerurl" != "" ]; then
               bannerfile=$(basename $bannerurl)
               if [ ! -f "$htmlout/images/${mediatype}banners/$bannerfile" ]; then
                  wget -O $htmlout/images/${mediatype}banners/$bannerfile $bannerurl
               fi
            else
               bannerfile="unknown.jpg"
            fi
         fi

         posterfile="${idLoop}.jpg"

         #
         # if the poster art doesn't exist, do this rather complicated thing...
         #
         if [ ! -f "$htmlout/images/${mediatype}posters/${idLoop}.jpg" ]; then
            posterurl=`sqlite3 $dbpath/MyVideos107.db "SELECT url from art where media_id=$idLoop and type='poster' and media_type=\"$mediatype\""`

            if [ "$posterurl" == "" ]; then
               convert -size 150x221 xc:black $htmlout/images/${mediatype}posters/TEMP${idLoop}.jpg
               convert -background '#0008' -fill white -gravity northwest -size 150x200 caption:"${name}" $htmlout/images/${mediatype}posters/TEMP${idLoop}.jpg +swap -gravity north -composite $htmlout/images/${mediatype}posters/${idLoop}.jpg
               if [ -f "$htmlout/images/${mediatype}posters/TEMP${idLoop}.jpg" ]; then
                  rm "$htmlout/images/${mediatype}posters/TEMP${idLoop}.jpg"
               fi
            else
               wget -O $htmlout/images/${mediatype}posters/${idLoop}.jpg $posterurl
            fi
         
     
            convert $htmlout/images/${mediatype}posters/${posterfile} -resize 150 $htmlout/images/${mediatype}posters/TEMP0${posterfile}
            if [ -f "$htmlout/images/${mediatype}posters/${posterfile}" ]; then
               rm "$htmlout/images/${mediatype}posters/${posterfile}"
            fi
            mv $htmlout/images/${mediatype}posters/TEMP0${posterfile} $htmlout/images/${mediatype}posters/${posterfile}
            posterwidth=`identify -format %w $htmlout/images/${mediatype}posters/${posterfile}`

            if [ "$mediatype" == "movie" ]; then
               if [ "$width" == "" ]; then
                  imagetext="$filetype"
               else
                  imagetext="${width} | ${filetype}"
               fi
               convert -background '#0008' -fill white -gravity southeast -size ${posterwidth}x15 caption:"${imagetext}" $htmlout/images/${mediatype}posters/${posterfile} +swap -gravity south -composite $htmlout/images/${mediatype}posters/TEMP0${posterfile}

               mv $htmlout/images/${mediatype}posters/TEMP0${posterfile} $htmlout/images/${mediatype}posters/${posterfile}
               if [ -f "$htmlout/images/${mediatype}posters/TEMP0${posterfile}" ]; then
                  rm "$htmlout/images/${mediatype}posters/TEMP0${posterfile}"
               fi
            fi
         fi


#         if [ "$filegenre" != "" ]; then 
#            filegenre=${filegenre::-3}
#         fi

         echo "<a href=\"$idLoop.html\">" >> $pageOut
         echo "<img width=150 src=\"../images/${mediatype}posters/$posterfile\"></a>" >> $pageOut

         echo "<html><head><title>$name</title>" >> $out
         echo "<link rel=\"stylesheet\" href=\"../kodisheet.css\" type=\"text/css\">" >> $out
         echo "</head>" >> $out
         echo "<body>" >> $out
         echo "<center><table width=400><tr><td>" >> $out

         if [ "$mediatype" == "tvshow" ]; then
            echo "<img src=\"../images/${mediatype}banners/$bannerfile\" width=450>" >> $out
            echo "</p>" >> $out
            echo "<p class=\"details\">" >> $out
            echo "Rating: $rating<br />" >> $out
            echo "First aired: $firstaired<br />" >> $out
            echo "Genre: $filegenre<br />" >> $out
            echo "Network: $network<br />" >> $out
            echo "Content Rating: $contentrating<br />" >> $out
            echo "</p>" >> $out
         fi
         if [ "$mediatype" == "movie" ]; then
            echo "<p class=\"showtitle\">$name</p>" >> $out
            echo "<p class=\"artwork\">" >> $out
            echo "<img src=\"../images/${mediatype}posters/$posterfile\"" >> $out
            echo "</p>" >> $out
            echo "<p class=\"details\">" >> $out
            echo "trailer: <a href=\"$trailerurl\">youtube</a><br />" >> $out
            echo "studio: $studio<br />" >> $out
            echo "rating: $rating<br />" >> $out
            echo "runtime: $runtime<br />" >> $out
            echo "genre: $filegenre<br />" >> $out
            echo "director: $director<br />" >> $out
            echo "</p>" >> $out
         fi

         echo "<p class=\"synopsis\">" >> $out
         echo "<font class=\"heading\">Plot synopsis</font><br /><br />" >> $out
         echo "$plot" >> $out
         echo "</p>" >> $out

         if [ "$mediatype" == "movie" ]; then
            echo "<p class=\"footer\">$footer<br /></p>" >> $out
            echo "</td></tr></table></center>" >> $out
            echo "</p></body></html>" >> $out
         fi

         if [ "$mediatype" == "tvshow" ]; then

            seasons=`sqlite3 $dbpath/MyVideos107.db "SELECT idSeason from seasons where idShow=$idLoop"`
            seasonsCount="0"

            episodeCount=`sqlite3 $dbpath/MyVideos107.db "SELECT count() from episode where idShow=$idLoop"`
            convert -font Arial -pointsize 18 -background 'blue' -fill white -gravity center -size 30x25 caption:"$episodeCount" $htmlout/images/${mediatype}posters/${posterfile} +swap -gravity northwest -composite $htmlout/images/${mediatype}posters/TEMP0${posterfile}

            if [ -f "$htmlout/images/${mediatype}posters/${posterfile}" ]; then
               rm "$htmlout/images/${mediatype}posters/${posterfile}"
            fi

            for season in $seasons; do
               count=`sqlite3 $dbpath/MyVideos107.db "SELECT count() from episode where idShow=$idLoop and idSeason=$season"`

               if [ "$count" != "0" ]; then
                  echo "<p class=\"seasonlist\">" >> $out
                  seasonNo=`sqlite3 $dbpath/MyVideos107.db "SELECT season from seasons where idShow=$idLoop and idSeason=$season"`
                  realseason=`sqlite3 $dbpath/MyVideos107.db "SELECT c12 from episode where idShow=$idLoop and idSeason=$season limit 1"`
                  file=`sqlite3 $dbpath/MyVideos107.db "SELECT c18 from episode where idShow=$idLoop and idSeason=$season"`
                  echo "<Font class=\"heading\">Season $realseason</font>" >> $out
                  echo "<br /><br />" >> $out

                  episodes=`sqlite3 $dbpath/MyVideos107.db "select idEpisode from episode where idShow=$idLoop and idSeason=$season"`
                  seasonsCount=$((seasonsCount+1))

                  for episode in $episodes; do
                     episodeNo=`sqlite3 $dbpath/MyVideos107.db "SELECT c13 from episode where idShow=$idLoop and idSeason=$season and idEpisode=$episode"`
                     episodeTitle=`sqlite3 $dbpath/MyVideos107.db "SELECT c00 from episode where idShow=$idLoop and idSeason=$season and idEpisode=$episode"`
                     echo "$episodeNo. $episodeTitle<br />" >> $out
                  done
                  echo "</p>" >> $out
               fi
            done
            convert -font Arial -pointsize 18 -background 'orange' -fill white -gravity center -size 30x25 caption:"$seasonsCount"  $htmlout/images/${mediatype}posters/TEMP0${posterfile} +swap -gravity northeast -composite $htmlout/images/${mediatype}posters/${posterfile}
            if [ -f "$htmlout/images/${mediatype}posters/TEMP0${posterfile}" ]; then
               rm "$htmlout/images/${mediatype}posters/TEMP0${posterfile}"
            fi

      echo "<p class=\"footer\">$footer<br /></p>" >> $out
            echo "</td></tr></table></center>" >> $out
      echo "</p></body></html>" >> $out
         fi
      fi
      if [ "$pageCounter" == "$perPage" ]; then
         page=$((page+1))
         pageCounter="0"
         echo "</p><p class=\"footer\">$footer" >> $pageOut
         echo "</p><br /></body></html>" >> $pageOut
#         echo "-- End of page $page"
      else
         pageCounter=$((pageCounter+1))
      fi
   done

done

#
# index page
#

datestamps=""

#for ((day=0;day<$lastDays;day++)); do
#   ago=`date +%Y-%m-%d --date "$day day ago"`
#   datestamps="$ago $datestamps"
#done

echo "<html><head><title>Kodisheet $VERSION</title>" >> $htmlout/index.html
echo "<link rel=\"stylesheet\" href=\"kodisheet.css\" type=\"text/css\">" >> $htmlout/index.html
echo "</head><body>" >> $htmlout/index.html
echo "<p class=\"navigaton\"><br />" >> $htmlout/index.html
echo "<font class=\"giantheading\">Home " >> $htmlout/index.html
echo " | " >> $htmlout/index.html

echo "<a href=\"tvshow/index.1.html\">TV Shows</a> [$tvCount]" >> $htmlout/index.html
echo " | " >> $htmlout/index.html
echo "<a href=\"movie/index.1.html\">Movies</a> [$movieCount]" >> $htmlout/index.html
echo " | " >> $htmlout/index.html
echo "<a href=\"genre/index.html\">Genres</a>" >> $htmlout/index.html
echo " | " >> $htmlout/index.html
echo "<a href=\"recent.html\">Last $lastDays days</a>" >> $htmlout/index.html
echo "<br /><br /></font>" >> $htmlout/index.html

echo "<font class=\"heading\">Recently added movies</font>" >> $htmlout/index.html
echo "</font><br /><br />" >> $htmlout/index.html

echo "<html><head><title>Recently Added</title>" >> $htmlout/recent.html
echo "<link rel=\"stylesheet\" href=\"kodisheet.css\" type=\"text/css\">" >> $htmlout/recent.html
echo "</head>" >> $htmlout/recent.html
echo "<body><center><table width=500>" >> $htmlout/recent.html
echo "<tr><td colspan=2><br /><font class=\"giantheading\">Recently added movies</font><br /><br /></td></tr>" >> $htmlout/recent.html

datestamps=`sqlite3 $dbpath/MyVideos107.db "select DISTINCT(substr(dateAdded,1,10)) from files ORDER BY dateAdded DESC LIMIT $lastDays"`
for datestamp in $datestamps; do
   files=`sqlite3 $dbpath/MyVideos107.db "select idFile from files where dateAdded LIKE \"$datestamp %%:%%:%%\""`
   for file in $files; do
      findMovie=`sqlite3 $dbpath/MyVideos107.db "select count() from movie where idFile=$file"`
      if [ "$findMovie" != "0" ]; then
         idMovie=`sqlite3 $dbpath/MyVideos107.db "select idMovie from movie where idFile=$file"`
         c00=`sqlite3 $dbpath/MyVideos107.db "select c00 from movie where idFile=$file"`
         echo $c00
         plot=`sqlite3 $dbpath/MyVideos107.db "SELECT c01 from movie where idMovie=$idMovie"`
         trailerurl=`sqlite3 $dbpath/MyVideos107.db "SELECT c19 from movie where idMovie=$idMovie"`
         if [ "$trailerurl" != "" ]; then
            videoarg=`echo $trailerurl|awk -F"videoid=" '{print $2}'|cut -c1-11`
            trailerurl="https://www.youtube.com/watch?v=${videoarg}"
         fi

         studio=`sqlite3 $dbpath/MyVideos107.db "SELECT c18 from movie where idMovie=$idMovie"`
         rating=`sqlite3 $dbpath/MyVideos107.db "SELECT c12 from movie where idMovie=$idMovie"`
         runtime=`sqlite3 $dbpath/MyVideos107.db "SELECT c11 from movie where idMovie=$idMovie"`
         runtime=`echo - | awk -v "S=$runtime" '{printf "%dh%dm%ds",S/(60*60),S%(60*60)/60,S%60}'`
         director=`sqlite3 $dbpath/MyVideos107.db "SELECT c15 from movie where idMovie=$idMovie"`

         echo "<a href=\"movie/$idMovie.html\">" >> $htmlout/index.html
         echo "<img src=\"images/movieposters/$idMovie.jpg\">" >> $htmlout/index.html
         echo "</a>" >> $htmlout/index.html

         echo "<tr><td valign=top><a href=\"movie/$idMovie.html\">" >> $htmlout/recent.html
         echo "<img src=\"images/movieposters/$idMovie.jpg\">" >> $htmlout/recent.html
         echo "</a></td>" >> $htmlout/recent.html
         echo "<td><p class=\"showtitle\">$c00</p>" >> $htmlout/recent.html
         echo "<p class=\"details\">" >> $htmlout/recent.html
         echo "trailer: <a href=\"$trailerurl\">youtube</a><br />" >> $htmlout/recent.html
         echo "studio: $studio<br />" >> $htmlout/recent.html
         echo "rating: $rating<br />" >> $htmlout/recent.html
         echo "runtime: $runtime<br />" >> $htmlout/recent.html
         echo "genre: $filegenre<br />" >> $htmlout/recent.html
         echo "director: $director<br />" >> $htmlout/recent.html
         echo "<br /><br />" >> $htmlout/recent.html
         echo "$plot" >> $htmlout/recent.html
         echo "<br /><br /></td></tr>" >> $htmlout/recent.html

      fi
   done
done

echo "<br /><br />" >> $htmlout/index.html
echo "<font class=\"heading\">Recently added TV</font>" >> $htmlout/index.html
echo "</font><br /><br />" >> $htmlout/index.html

reqstr=""

for datestamp in $datestamps; do
   files=`sqlite3 $dbpath/MyVideos107.db "select idFile from files where dateAdded LIKE \"$datestamp %%:%%:%%\""`
   prevShow=""
   prevseason=""
   for file in $files; do
      findShow=`sqlite3 $dbpath/MyVideos107.db "select count() from episode where idFile=$file"`
      if [ "$findShow" != "0" ]; then
         idShow=`sqlite3 $dbpath/MyVideos107.db "select idShow from episode where idFile=$file"`
         reqstr="$reqstr $idShow:$file"
      fi
   done
done

showlist=`for i in $reqstr; do echo $i; done | sort`

prevShow=""
prevseason=""

for show in $showlist; do
   file=`echo $show|awk -F":" '{print $2}'`
   idShow=`echo $show|awk -F":" '{print $1}'`

   idShow=`sqlite3 $dbpath/MyVideos107.db "select idShow from episode where idFile=$file"`
   c00=`sqlite3 $dbpath/MyVideos107.db "select c00 from tvshow where idShow=$idShow"`
   c01=`sqlite3 $dbpath/MyVideos107.db "select c01 from episode where idFile=$file"`
   showc00=`sqlite3 $dbpath/MyVideos107.db "select c00 from episode where idFile=$file"`
   c18=`sqlite3 $dbpath/MyVideos107.db "select c18 from episode where idFile=$file"`

   if [ "$idShow" != "$prevShow" ]; then
      if [ "$prevshow" != "" ]; then
         echo "</td></tr>" >> $htmlout/recent.html
      fi
      echo $c00
      prevShow="$idShow"

      echo "<a href=\"tvshow/$idShow.html\">" >> $htmlout/index.html
      echo "<img src=\"images/tvshowposters/$idShow.jpg\">" >> $htmlout/index.html
      echo "</a>" >> $htmlout/index.html

      bannerurl=`sqlite3 $dbpath/MyVideos107.db "SELECT url from art where media_id=$idShow and type='banner' and media_type=\"tvshow\""`
      bannerfile=$(basename $bannerurl)
      echo "<tr><td colspan=2><br /><a href=\"tvshow/$idShow.html\">" >> $htmlout/recent.html
      echo "<img width=450 src=\"images/tvshowbanners/$bannerfile\">" >> $htmlout/recent.html
      echo "</a><br /></td></tr><tr><td colspan=2>" >> $htmlout/recent.html
      prevseason=""
   fi

   epno=$(basename "$c18")
   epno=${epno:4:2}
   season=$(basename "$c18")
   season=${season:1:2}

   if [ "$prevseason" != "$season" ]; then
      if [ "${season:0:1}" == "0" ]; then
         displayseason=${season:1:1}
      else
         displayseason=$season
      fi
      echo "<font class=\"heading\">Season $displayseason</font><br /><br />" >> $htmlout/recent.html
      prevseason=$season
   fi
   echo "<font class=\"bodytext\">$epno $showc00</font><br />" >> $htmlout/recent.html
done

echo "</p><p class=\"footer\">$footer" >> $htmlout/index.html
echo "</p><br /></body></html>" >> $htmlout/index.html

echo "<tr><td colspan=2><br /><p class=\"footer\">$footer</font></br ></td></tr>" >> $htmlout/recent.html
echo "</center></body></html>" >> $htmlout/recent.html

genres=`sqlite3 $dbpath/MyVideos107.db "SELECT genre_id from genre"`

#
# first pass to build the genre navbar
#
for genre in $genres; do
   name=`sqlite3 $dbpath/MyVideos107.db "SELECT name from genre where genre_id=$genre"`
   allcount=`sqlite3 $dbpath/MyVideos107.db "SELECT count() from genre_link where genre_id=$genre"`
   if [ "$allcount" != "0" ]; then
      allgenre="$allgenre $genre:$allcount"
   fi
   tvcount=`sqlite3 $dbpath/MyVideos107.db "SELECT count() from genre_link where genre_id=$genre and media_type=\"tvshow\""`
   if [ "$tvcount" != "0" ]; then
      tvgenre="$tvgenre $genre:$tvcount"
   fi
   moviecount=`sqlite3 $dbpath/MyVideos107.db "SELECT count() from genre_link where genre_id=$genre and media_type=\"movie\""`
   if [ "$moviecount" != "0" ]; then
      moviegenre="$moviegenre $genre:$moviecount"
   fi
   #
   # cover all bases, remove if exists
   #
   if [ -f "$htmlout/genre/all.$genre.html" ]; then
      rm "$htmlout/genre/all.$genre.html"
   fi
   if [ -f "$htmlout/genre/tvshow.$genre.html" ]; then
      rm "$htmlout/genre/tvshow.$genre.html"
   fi
   if [ -f "$htmlout/genre/movie.$genre.html" ]; then
      rm "$htmlout/genre/movie.$genre.html"
   fi

done

echo "<html><head><title>kodisheet - Genre $name</title>" >> $htmlout/genre/index.html
echo "<link rel=\"stylesheet\" href=\"../kodisheet.css\" type=\"text/css\">" >> $htmlout/genre/index.html
echo "</head><body>" >> $htmlout/genre/index.html
genrebar="<font class=\"heading\">"
for splitgen in $allgenre; do
   disgen=`echo $splitgen|awk -F":" '{print $1}'`
   discount=`echo $splitgen|awk -F":" '{print $2}'`
   disname=`sqlite3 $dbpath/MyVideos107.db "SELECT name from genre where genre_id=$disgen"`
   genrebar="$genrebar <a href=\"all.$disgen.html\">$disname</a> [$discount] | "
done
genrebar=${genrebar::-3}
echo "$genrebar</font>" >> $htmlout/genre/index.html
echo "</p><p class=\"footer\">$footer" >> $htmlout/genre/index.html
echo "</body></html>" >> $htmlout/genre/index.html

#
# second pass
#
for genre in $genres; do
   #
   # html headings
   #
   filters="all tvshow movie"
   for filter in $filters; do
      echo "<html><head><title>kodisheet - Genre $name</title>" >> $htmlout/genre/$filter.$genre.html
      echo "<link rel=\"stylesheet\" href=\"../kodisheet.css\" type=\"text/css\">" >> $htmlout/genre/$filter.$genre.html
      echo "</head><body>" >> $htmlout/genre/$filter.$genre.html

      #
      # nav
      #
      echo "<font class=\"heading\">Filter: " >> $htmlout/genre/$filter.$genre.html
      if [ "$filter" == "all" ]; then
         echo "All" >> $htmlout/genre/$filter.$genre.html
         genrelist=$allgenre
      else
         echo "<a href=\"all.$genre.html\">All</a>" >> $htmlout/genre/$filter.$genre.html
      fi
      echo " | " >> $htmlout/genre/$filter.$genre.html
      if [ "$filter" == "movie" ]; then
         echo "Movies" >> $htmlout/genre/$filter.$genre.html
         genrelist=$moviegenre
      else
         echo "<a href=\"movie.$genre.html\">Movies</a>" >> $htmlout/genre/$filter.$genre.html
      fi
      echo " | " >> $htmlout/genre/$filter.$genre.html
      if [ "$filter" == "tvshow" ]; then
         echo "TV" >> $htmlout/genre/$filter.$genre.html
         genrelist=$tvgenre
      else
         echo "<a href=\"tvshow.$genre.html\">TV</a>" >> $htmlout/genre/$filter.$genre.html
      fi
     
      echo "</font><br /><br />" >> $htmlout/genre/$filter.$genre.html
      echo "<font class=\"heading\">Genre: </font>" >> $htmlout/genre/$filter.$genre.html


      genrebar="<font class=\"heading\">"
      for splitgen in $genrelist; do
         disgen=`echo $splitgen|awk -F":" '{print $1}'`
         discount=`echo $splitgen|awk -F":" '{print $2}'`
         disname=`sqlite3 $dbpath/MyVideos107.db "SELECT name from genre where genre_id=$disgen"`
#         echo $navgen $disgen $disname $discount
         if [ "$disgen" == "$genre" ]; then
            genrebar="$genrebar $disname [$discount] | "
         else
            genrebar="$genrebar <a href=\"$filter.$disgen.html\">$disname</a> [$discount] | " 
         fi
      done
      genrebar=${genrebar::-3}
      echo "$genrebar</font>" >> $htmlout/genre/$filter.$genre.html

      echo "<br /><br />" >> $htmlout/genre/$filter.$genre.html

      if [ "$filter" == "tvshow" ] || [ "$filter" == "all" ]; then
         tvlist=`sqlite3 $dbpath/MyVideos107.db "SELECT media_id from genre_link where genre_id=$genre and media_type=\"tvshow\""`
         for show in $tvlist; do
            echo "<a href=\"../tvshow/$show.html\">" >> $htmlout/genre/$filter.$genre.html
            echo "<img src=\"../images/tvshowposters/$show.jpg\"></a>" >> $htmlout/genre/$filter.$genre.html
         done
      fi
      if [ "$filter" == "movie" ] || [ "$filter" == "all" ]; then
         movielist=`sqlite3 $dbpath/MyVideos107.db "SELECT media_id from genre_link where genre_id=$genre and media_type=\"movie\""`
         for movie in $movielist; do
            echo "<a href=\"../movie/$movie.html\">" >> $htmlout/genre/$filter.$genre.html
            echo "<img src=\"../images/movieposters/$movie.jpg\"></a>" >> $htmlout/genre/$filter.$genre.html
         done
      fi

      echo "<p class=\"footer\">$footer</p>" >> $htmlout/genre/$filter.$genre.html
      echo "</body></html>" >> $htmlout/genre/$filter.$genre.html
   done
done

